# Change this to the directory you want to protect
# Example is protecting a location with a php app.
#
location ~ ^/ssotest/.+\.php$ {
  auth_request /auth/auth.php;

  # Get headers from upstream request.
  #
  auth_request_set $user $upstream_http_x_forwarded_user;
  auth_request_set $realip $upstream_http_x_real_ip;


  # Include your fastcgi settings for php-fpm.
  include snippets/fastcgi-php.conf;

  fastcgi_pass unix:/var/run/php/php7.1-fpm.sock;

  # For PHP-FPM make sure you set the fastcgi params
  # that you want to pass on as headers the the application.
  #
  fastcgi_param X_FORWARDED_USER $user;
  fastcgi_param X_REAL_IP $realip;
  fastcgi_param X_FORWARDED_FOR $proxy_add_x_forwarded_for;

  # if Auth sub request fails then show login screen.
  #
  error_page 401 = @authError401;

}

# Acutal auth handler is running as seperate ngnix server.
#
location = /auth/auth.php {
    internal;

    add_header "Cache-Control" "max-age=0, no-cache, no-store, must-revalidate";
    add_header "Pragma" "no-cache";
    add_header "Expires" "-1";

    proxy_pass https://127.0.0.1:8181;
    proxy_pass_request_body off;
    proxy_set_header Content-Length "";
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
}

# Login displayed on ngnix auth server.
#
location /auth/login {

    add_header "Cache-Control" "max-age=0, no-cache, no-store, must-revalidate";
    add_header "Pragma" "no-cache";
    add_header "Expires" "-1";

    proxy_pass https://127.0.0.1:8181/auth/login.php;

    # Set realIP and port here so that remote-addr gets updated.
    proxy_set_header X-Real-IP $remote_addr:$remote_port;
    # Set forwarded-for just in case you want to use that instead of real-ip
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
}

location /auth/logout {

   add_header "Cache-Control" "max-age=0, no-cache, no-store, must-revalidate";
   add_header "Pragma" "no-cache";
   add_header "Expires" "-1";

   proxy_pass http://127.0.0.1:8181/auth/logout.php;

   proxy_set_header X-Real-IP $remote_addr:$remote_port;
   proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
   proxy_set_header X-Forwarded-Proto $scheme;
}

# Set the redirect to the login page
#
location @authError401 {
  return 302 /auth/login?url=$scheme://$http_host$request_uri;
}

